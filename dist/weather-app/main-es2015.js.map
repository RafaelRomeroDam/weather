{"version":3,"sources":["./$_lazy_route_resource lazy namespace object","./src/app/apixu.service.ts","./src/app/app-routing.module.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/weather/weather.component.ts","./src/app/weather/weather.component.html","./src/environments/environment.ts","./src/main.ts"],"names":[],"mappings":"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","file":"main-es2015.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ApixuService {\n  myApiKey: string = '814b1cc6f53ac582f374a2e1e342c786';\n\n  constructor(private http: HttpClient) { }\n\n  getWeather(location) {\n    return this.http.get(\n      'https://api.weatherstack.com/current?access_key='+ this.myApiKey +'&query=' + location\n    );\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { WeatherComponent } from './weather/weather.component';\n\nconst routes: Routes = [\n  { path: '', component: WeatherComponent },\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'weather-app';\n}\n","<router-outlet></router-outlet>","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { WeatherComponent } from './weather/weather.component';\nimport { ReactiveFormsModule } from '@angular/forms';\nimport { HttpClientModule } from '@angular/common/http';\nimport { ApixuService } from './apixu.service';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    WeatherComponent\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    ReactiveFormsModule,\n    HttpClientModule\n  ],\n  providers: [ApixuService,],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup } from '@angular/forms';\nimport { ApixuService } from '../apixu.service';\n\n@Component({\n  selector: 'app-weather',\n  templateUrl: './weather.component.html',\n  styleUrls: ['./weather.component.css']\n})\nexport class WeatherComponent implements OnInit {\n  public weatherSearchForm: FormGroup;\n  public weatherData: any;\n\n  constructor(\n    private formBuilder: FormBuilder,\n    private apixuService: ApixuService) { }\n\n  ngOnInit(): void {\n    this.weatherSearchForm = this.formBuilder.group({\n      location: ['']\n    })\n  }\n\n  sendToAPIXU(formValues) {\n    this.apixuService.getWeather(formValues.location).subscribe(data => {\n      this.weatherData = data;\n    });\n  }\n\n}\n","<div class=\"container\">\n    <div class=\"row\">\n        <div class=\"col-md-6\">\n            <h3 class=\"text-center my-4\">Search for Weather:</h3>\n            <form [formGroup]=\"weatherSearchForm\" (ngSubmit)=\"sendToAPIXU(weatherSearchForm.value)\">\n                <div class=\"form-group\">\n                    <input type=\"text\" \n                            class=\"form-control\" \n                            id=\"weatherLocation\" \n                            aria-describedby=\"weatherLocation\" \n                            placeholder=\"Please input a location\"\n                            formControlName=\"location\">\n                </div>\n                <div class=\"text-center\">\n                    <button type=\"submit\" \n                            class=\"btn btn-success btn-md\">Search for the weather</button>\n                </div>\n            </form>\n        </div>\n        <div class=\"col-md-6\">\n            <h3 class=\"text-center my-4\">Weather Details:</h3>\n            <div class=\"text-center\">Current weather conditions: \n                    <span *ngFor=\"let condition of weatherData?.current.weather_descriptions\">\n                        {{condition}}\n                    </span>\n             </div>\n            <p class=\"text-center\">Temperature in Degrees Celcius: {{weatherData?.current.temperature}}</p>\n            <p class=\"text-center\">Feels like in Degrees Celcius: {{weatherData?.current.feelslike}} </p>\n            <p class=\"text-center\">Location searched: {{weatherData?.location.name}} </p>\n        </div>\n    </div>\n</div>","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"sourceRoot":"webpack:///"}